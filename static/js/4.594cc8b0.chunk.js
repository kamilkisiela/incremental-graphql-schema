(this.webpackJsonpapp=this.webpackJsonpapp||[]).push([[4],{134:function(e,n,t){"use strict";function r(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}t.d(n,"a",(function(){return r}))},135:function(e,n,t){var r=t(37).parse;function i(e){return e.replace(/[\s,]+/g," ").trim()}var o={},a={};var c=!0;var s=!1;function u(e){var n=i(e);if(o[n])return o[n];var t=r(e,{experimentalFragmentVariables:s});if(!t||"Document"!==t.kind)throw new Error("Not a valid GraphQL document.");return t=function e(n,t){var r=Object.prototype.toString.call(n);if("[object Array]"===r)return n.map((function(n){return e(n,t)}));if("[object Object]"!==r)throw new Error("Unexpected input.");t&&n.loc&&delete n.loc,n.loc&&(delete n.loc.startToken,delete n.loc.endToken);var i,o,a,c=Object.keys(n);for(i in c)c.hasOwnProperty(i)&&(o=n[c[i]],"[object Object]"!==(a=Object.prototype.toString.call(o))&&"[object Array]"!==a||(n[c[i]]=e(o,!0)));return n}(t=function(e){for(var n,t={},r=[],o=0;o<e.definitions.length;o++){var s=e.definitions[o];if("FragmentDefinition"===s.kind){var u=s.name.value,p=i((n=s.loc).source.body.substring(n.start,n.end));a.hasOwnProperty(u)&&!a[u][p]?(c&&console.warn("Warning: fragment with name "+u+" already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names"),a[u][p]=!0):a.hasOwnProperty(u)||(a[u]={},a[u][p]=!0),t[p]||(t[p]=!0,r.push(s))}else r.push(s)}return e.definitions=r,e}(t),!1),o[n]=t,t}function p(){for(var e=Array.prototype.slice.call(arguments),n=e[0],t="string"===typeof n?n:n[0],r=1;r<e.length;r++)e[r]&&e[r].kind&&"Document"===e[r].kind?t+=e[r].loc.source.body:t+=e[r],t+=n[r];return u(t)}p.default=p,p.resetCaches=function(){o={},a={}},p.disableFragmentWarnings=function(){c=!1},p.enableExperimentalFragmentVariables=function(){s=!0},p.disableExperimentalFragmentVariables=function(){s=!1},e.exports=p},140:function(e,n,t){"use strict";t.r(n),t.d(n,"typeDefs",(function(){return c})),t.d(n,"resolvers",(function(){return s}));var r=t(134),i=t(135);function o(){var e=Object(r.a)(["\n  extend type Query {\n    events: [Event!]\n  }\n\n  extend type Mutation {\n    addEvent(name: String!, description: String): Event!\n  }\n\n  type Event {\n    id: ID!\n    name: String!\n    description: String\n  }\n"]);return o=function(){return e},e}var a=[{id:0,name:"Shopping",description:"Gifts"},{id:1,name:"Vet",description:"Dog is sick"},{id:2,name:"Party",description:"After months of Covid-19"}],c=t.n(i)()(o()),s={Query:{events:function(){return a}},Mutation:{addEvent:function(e,n){var t=n.name,r=n.description,i={id:a.length,name:t,description:r};return a.push(i),i}}}}}]);
//# sourceMappingURL=4.594cc8b0.chunk.js.map