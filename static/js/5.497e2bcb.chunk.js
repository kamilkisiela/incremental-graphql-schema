(this.webpackJsonpapp=this.webpackJsonpapp||[]).push([[5],{134:function(e,t,n){"use strict";function r(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}n.d(t,"a",(function(){return r}))},135:function(e,t,n){var r=n(37).parse;function a(e){return e.replace(/[\s,]+/g," ").trim()}var o={},i={};var c=!0;var s=!1;function u(e){var t=a(e);if(o[t])return o[t];var n=r(e,{experimentalFragmentVariables:s});if(!n||"Document"!==n.kind)throw new Error("Not a valid GraphQL document.");return n=function e(t,n){var r=Object.prototype.toString.call(t);if("[object Array]"===r)return t.map((function(t){return e(t,n)}));if("[object Object]"!==r)throw new Error("Unexpected input.");n&&t.loc&&delete t.loc,t.loc&&(delete t.loc.startToken,delete t.loc.endToken);var a,o,i,c=Object.keys(t);for(a in c)c.hasOwnProperty(a)&&(o=t[c[a]],"[object Object]"!==(i=Object.prototype.toString.call(o))&&"[object Array]"!==i||(t[c[a]]=e(o,!0)));return t}(n=function(e){for(var t,n={},r=[],o=0;o<e.definitions.length;o++){var s=e.definitions[o];if("FragmentDefinition"===s.kind){var u=s.name.value,l=a((t=s.loc).source.body.substring(t.start,t.end));i.hasOwnProperty(u)&&!i[u][l]?(c&&console.warn("Warning: fragment with name "+u+" already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names"),i[u][l]=!0):i.hasOwnProperty(u)||(i[u]={},i[u][l]=!0),n[l]||(n[l]=!0,r.push(s))}else r.push(s)}return e.definitions=r,e}(n),!1),o[t]=n,n}function l(){for(var e=Array.prototype.slice.call(arguments),t=e[0],n="string"===typeof t?t:t[0],r=1;r<e.length;r++)e[r]&&e[r].kind&&"Document"===e[r].kind?n+=e[r].loc.source.body:n+=e[r],n+=t[r];return u(n)}l.default=l,l.resetCaches=function(){o={},i={}},l.disableFragmentWarnings=function(){c=!1},l.enableExperimentalFragmentVariables=function(){s=!0},l.disableExperimentalFragmentVariables=function(){s=!1},e.exports=l},141:function(e,t,n){"use strict";n.r(t),n.d(t,"typeDefs",(function(){return i})),n.d(t,"resolvers",(function(){return c}));var r=n(134),a=n(135);function o(){var e=Object(r.a)(["\n  extend type Query {\n    chats: [Chat!]\n  }\n\n  type Chat {\n    id: ID!\n    title: String!\n    members: [User!]\n  }\n"]);return o=function(){return e},e}var i=n.n(a)()(o()),c={Query:{chats:function(){return[{id:0,title:"Apollo",members:[0]},{id:1,title:"EngSys",members:[0]},{id:2,title:"General",members:[0,1]}]}}}}}]);
//# sourceMappingURL=5.497e2bcb.chunk.js.map