{"version":3,"sources":["chunks/calendar.tsx"],"names":["EVENTS","gql","ADD_EVENT","NewEvent","mutation","mutate","onClick","variables","name","description","Math","random","Calendar","query","fetchPolicy","children","loading","data","events","map","event","key","id"],"mappings":"mlBAIA,IAAMA,EAASC,IAAH,KAUNC,EAAYD,IAAH,KAUf,SAASE,IACP,OACE,kBAAC,IAAD,CAAUC,SAAUF,IACjB,SAACG,GACA,OACE,6BACE,4BACEC,QAAS,kBACPD,EAAO,CACLE,UAAW,CACTC,KAAM,eACNC,YAAa,GAAKC,KAAKC,cAL/B,wBAmBG,SAASC,IACtB,OACE,6BACE,sCACA,kBAACT,EAAD,MACA,kBAAC,IAAD,CACEU,MAAOb,EACPc,YAAY,eACZC,SAAU,YAA6B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,KACpB,OAAID,EACK,2CAIP,4BACGC,EAAKC,OAAOC,KAAI,SAACC,GAChB,OACE,wBAAIC,IAAKD,EAAME,IACb,4BAAKF,EAAMZ,MACX,2BAAIY,EAAMX","file":"static/js/8.362d98a5.chunk.js","sourcesContent":["import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\n\nconst EVENTS = gql`\n  query allEvents {\n    events {\n      id\n      name\n      description\n    }\n  }\n`;\n\nconst ADD_EVENT = gql`\n  mutation newEvent($name: String!, $description: String) {\n    addEvent(name: $name, description: $description) {\n      id\n      name\n      description\n    }\n  }\n`;\n\nfunction NewEvent() {\n  return (\n    <Mutation mutation={ADD_EVENT}>\n      {(mutate: any) => {\n        return (\n          <div>\n            <button\n              onClick={() =>\n                mutate({\n                  variables: {\n                    name: \"Random event\",\n                    description: \"\" + Math.random(),\n                  },\n                })\n              }\n            >\n              Add random event\n            </button>\n          </div>\n        );\n      }}\n    </Mutation>\n  );\n}\n\nexport default function Calendar() {\n  return (\n    <div>\n      <h2>Events</h2>\n      <NewEvent />\n      <Query\n        query={EVENTS}\n        fetchPolicy=\"network-only\"\n        children={({ loading, data }: any) => {\n          if (loading) {\n            return <div>Loading...</div>;\n          }\n\n          return (\n            <ul>\n              {data.events.map((event: any) => {\n                return (\n                  <li key={event.id}>\n                    <h3>{event.name}</h3>\n                    <p>{event.description}</p>\n                  </li>\n                );\n              })}\n            </ul>\n          );\n        }}\n      />\n    </div>\n  );\n}\n"],"sourceRoot":""}