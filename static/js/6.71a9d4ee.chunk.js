(this.webpackJsonpapp=this.webpackJsonpapp||[]).push([[6],{134:function(e,n,t){"use strict";function r(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}t.d(n,"a",(function(){return r}))},135:function(e,n,t){var r=t(37).parse;function a(e){return e.replace(/[\s,]+/g," ").trim()}var o={},i={};var c=!0;var u=!1;function s(e){var n=a(e);if(o[n])return o[n];var t=r(e,{experimentalFragmentVariables:u});if(!t||"Document"!==t.kind)throw new Error("Not a valid GraphQL document.");return t=function e(n,t){var r=Object.prototype.toString.call(n);if("[object Array]"===r)return n.map((function(n){return e(n,t)}));if("[object Object]"!==r)throw new Error("Unexpected input.");t&&n.loc&&delete n.loc,n.loc&&(delete n.loc.startToken,delete n.loc.endToken);var a,o,i,c=Object.keys(n);for(a in c)c.hasOwnProperty(a)&&(o=n[c[a]],"[object Object]"!==(i=Object.prototype.toString.call(o))&&"[object Array]"!==i||(n[c[a]]=e(o,!0)));return n}(t=function(e){for(var n,t={},r=[],o=0;o<e.definitions.length;o++){var u=e.definitions[o];if("FragmentDefinition"===u.kind){var s=u.name.value,l=a((n=u.loc).source.body.substring(n.start,n.end));i.hasOwnProperty(s)&&!i[s][l]?(c&&console.warn("Warning: fragment with name "+s+" already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names"),i[s][l]=!0):i.hasOwnProperty(s)||(i[s]={},i[s][l]=!0),t[l]||(t[l]=!0,r.push(u))}else r.push(u)}return e.definitions=r,e}(t),!1),o[n]=t,t}function l(){for(var e=Array.prototype.slice.call(arguments),n=e[0],t="string"===typeof n?n:n[0],r=1;r<e.length;r++)e[r]&&e[r].kind&&"Document"===e[r].kind?t+=e[r].loc.source.body:t+=e[r],t+=n[r];return s(t)}l.default=l,l.resetCaches=function(){o={},i={}},l.disableFragmentWarnings=function(){c=!1},l.enableExperimentalFragmentVariables=function(){u=!0},l.disableExperimentalFragmentVariables=function(){u=!1},e.exports=l},142:function(e,n,t){"use strict";t.r(n),t.d(n,"typeDefs",(function(){return i})),t.d(n,"resolvers",(function(){return u}));var r=t(134),a=t(135);function o(){var e=Object(r.a)(["\n  type Query {\n    _: String\n  }\n\n  type Mutation {\n    _: String\n  }\n\n  type User {\n    id: ID!\n    name: String!\n  }\n"]);return o=function(){return e},e}var i=t.n(a)()(o()),c=["Foo","Bar"],u={User:{id:function(e){return e},name:function(e){return c[e]}}}}}]);
//# sourceMappingURL=6.71a9d4ee.chunk.js.map