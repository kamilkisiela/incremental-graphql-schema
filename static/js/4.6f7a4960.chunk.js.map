{"version":3,"sources":["chunks/chats.tsx","chunks/calendar.tsx","chunks/chats-and-calendar.tsx"],"names":["Chats","query","parse","fetchPolicy","children","loading","data","chats","map","chat","key","id","title","members","m","name","join","EVENTS","ADD_EVENT","NewEvent","mutation","mutate","onClick","variables","description","Math","random","Calendar","events","event","ChatsAndCalendar","style","display","flexDirection"],"mappings":"gGAAA,oFAIe,SAASA,IACtB,OACE,6BACE,qCACA,kBAAC,IAAD,CACEC,MAAOC,YAAK,sNAYZC,YAAY,eACZC,SAAU,YAA6B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,KACpB,OAAID,EACK,2CAIP,4BACGC,EAAKC,MAAMC,KAAI,SAACC,GACf,OACE,wBAAIC,IAAKD,EAAKE,IACZ,4BAAKF,EAAKG,OADZ,YAEYH,EAAKI,QAAQL,KAAI,SAACM,GAAD,OAAYA,EAAEC,QAAMC,KAAK,iB,iCCjCxE,oFAIMC,EAASf,YAAK,8FAUdgB,EAAYhB,YAAK,gLAUvB,SAASiB,IACP,OACE,kBAAC,IAAD,CAAUC,SAAUF,IACjB,SAACG,GACA,OACE,6BACE,4BACEC,QAAS,kBACPD,EAAO,CACLE,UAAW,CACTR,KAAM,eACNS,YAAa,GAAKC,KAAKC,cAL/B,wBAmBG,SAASC,IACtB,OACE,6BACE,sCACA,kBAACR,EAAD,MACA,kBAAC,IAAD,CACElB,MAAOgB,EACPd,YAAY,eACZC,SAAU,YAA6B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,KACpB,OAAID,EACK,2CAIP,4BACGC,EAAKsB,OAAOpB,KAAI,SAACqB,GAChB,OACE,wBAAInB,IAAKmB,EAAMlB,IACb,4BAAKkB,EAAMd,MACX,2BAAIc,EAAML,wB,iCCpE9B,qFAKe,SAASM,IACtB,OACE,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,cAAe,QAC5C,kBAAC,UAAD,MACA,kBAAC,UAAD","file":"static/js/4.6f7a4960.chunk.js","sourcesContent":["import React from \"react\";\nimport { parse } from \"graphql\";\nimport { Query } from \"react-apollo\";\n\nexport default function Chats() {\n  return (\n    <div>\n      <h2>Chats</h2>\n      <Query\n        query={parse(/* GraphQL */ `\n          query allChats {\n            chats {\n              id\n              title\n              members {\n                id\n                name\n              }\n            }\n          }\n        `)}\n        fetchPolicy=\"network-only\"\n        children={({ loading, data }: any) => {\n          if (loading) {\n            return <div>Loading...</div>;\n          }\n\n          return (\n            <ul>\n              {data.chats.map((chat: any) => {\n                return (\n                  <li key={chat.id}>\n                    <h3>{chat.title}</h3>\n                    Members: {chat.members.map((m: any) => m.name).join(\", \")}\n                  </li>\n                );\n              })}\n            </ul>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { parse } from \"graphql\";\nimport { Query, Mutation } from \"react-apollo\";\n\nconst EVENTS = parse(/* GraphQL */ `\n  query allEvents {\n    events {\n      id\n      name\n      description\n    }\n  }\n`);\n\nconst ADD_EVENT = parse(/* GraphQL */ `\n  mutation newEvent($name: String!, $description: String) {\n    addEvent(name: $name, description: $description) {\n      id\n      name\n      description\n    }\n  }\n`);\n\nfunction NewEvent() {\n  return (\n    <Mutation mutation={ADD_EVENT}>\n      {(mutate: any) => {\n        return (\n          <div>\n            <button\n              onClick={() =>\n                mutate({\n                  variables: {\n                    name: \"Random event\",\n                    description: \"\" + Math.random(),\n                  },\n                })\n              }\n            >\n              Add random event\n            </button>\n          </div>\n        );\n      }}\n    </Mutation>\n  );\n}\n\nexport default function Calendar() {\n  return (\n    <div>\n      <h2>Events</h2>\n      <NewEvent />\n      <Query\n        query={EVENTS}\n        fetchPolicy=\"network-only\"\n        children={({ loading, data }: any) => {\n          if (loading) {\n            return <div>Loading...</div>;\n          }\n\n          return (\n            <ul>\n              {data.events.map((event: any) => {\n                return (\n                  <li key={event.id}>\n                    <h3>{event.name}</h3>\n                    <p>{event.description}</p>\n                  </li>\n                );\n              })}\n            </ul>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Chats from \"./chats\";\nimport Calendar from \"./calendar\";\n\nexport default function ChatsAndCalendar() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      <Chats />\n      <Calendar />\n    </div>\n  );\n}\n"],"sourceRoot":""}